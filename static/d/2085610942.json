{"data":{"allMdx":{"nodes":[{"id":"3d57ca11-6233-5ad3-a6e6-9ec59fb6b30f","frontmatter":{"title":"Atlassian","startDate":"NOV 19","endDate":"MAR 20"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/work/atlassian\",\n  \"title\": \"Atlassian\",\n  \"startDate\": \"NOV 19\",\n  \"endDate\": \"MAR 20\",\n  \"type\": \"work-experience\",\n  \"domain\": \"web\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I worked within Atlassian\\u2019s Design System Team to deliver technical\\nimplementations of the Design Guidelines via a library of React components\\ncalled atlaskit.\"), mdx(\"p\", null, \"I spent a lot of time thinking about API design and the boundaries of what a\\ncomponent library should provide vs what flexibility should be left to\\nconsumers. I led the initial implementation of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@atlaskit/side-navigation\"), \" -\\nwhich delivered an API that favoured composition over configuration allowing\\nJira and Confluence to construct their navigations in a more idiomatic and\\nperformant manner.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"id":"f3877b32-f578-505a-9e45-a2ad7c11ad48","frontmatter":{"title":"Away Technology","startDate":"JAN 19","endDate":"NOV 19"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/work/Away\",\n  \"title\": \"Away Technology\",\n  \"startDate\": \"JAN 19\",\n  \"endDate\": \"NOV 19\",\n  \"type\": \"work-experience\",\n  \"domain\": \"web\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For an Australian travel startup I lead the Android development of a mobile app\\nfor booking business travel. I delivered features for the app whilst\\narchitecting and designing our high-level push-notifications platform.\"), mdx(\"p\", null, \"With unique challenges in releasing separate versions our app across multiple\\nplatforms and multiple environments, I also developed a set of bespoke tools to\\nmanage our Release Engineering requirements.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"id":"21010170-f370-5533-992c-82c91ed4d776","frontmatter":{"title":"Praxis International","startDate":"JAN 19","endDate":"NOV 19"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/work/Praxis\",\n  \"title\": \"Praxis International\",\n  \"startDate\": \"JAN 19\",\n  \"endDate\": \"NOV 19\",\n  \"type\": \"work-experience\",\n  \"domain\": \"web\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I worked as a full-stack web-developer within a UX agency to deliver superior\\nexperiences for web applications based on user-research. I implemented features\\nin user-facing web pages whilst hardening our internal tools and processes.\"), mdx(\"p\", null, \"I also championed a number of engineering-health initiatives and sought out\\nother 'DevOps' roles such as automating our backup processes and deployment\\ninfrastructure.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}]}}}